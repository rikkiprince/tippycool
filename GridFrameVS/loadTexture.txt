#include <SDL_image.h>

GLuint loadTexture(char *filename)
{
	// REFERENCED FROM: http://gpwiki.org/index.php/SDL:Tutorials:Using_SDL_with_OpenGL //
	// Altered to work with SDL_image

	GLuint texture;			// This is a handle to our texture object
	SDL_Surface *surface;	// This surface will tell us the details of the image
 
	if ( (surface = /*SDL_LoadBMP*/IMG_Load(filename)) ) { 
 
		// Check that the image's width is a power of 2
		if ( (surface->w & (surface->w - 1)) != 0 ) {
			printf("warning: %s's width is not a power of 2\n", filename);
		}
		
		// Also check if the height is a power of 2
		if ( (surface->h & (surface->h - 1)) != 0 ) {
			printf("warning: %s's height is not a power of 2\n", filename);
		}
        
		// Have OpenGL generate a texture object handle for us
		glGenTextures( 1, &texture );
 
		// Bind the texture object
		glBindTexture( GL_TEXTURE_2D, texture );
 
		// Set the texture's stretching properties
			glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR );
			glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR );
 
		// Edit the texture object's image data using the information SDL_Surface gives us
		glTexImage2D( GL_TEXTURE_2D, 0, 3, surface->w, surface->h, 0,
						  GL_BGR, GL_UNSIGNED_BYTE, surface->pixels );
	} 
	else {
		printf("SDL could not load %s: %s\n", filename, SDL_GetError());
		SDL_Quit();
		return 1;
	}    
 
	// Free the SDL_Surface only if it was successfully created
	if ( surface ) { 
		SDL_FreeSurface( surface );
	}

	return texture;
}